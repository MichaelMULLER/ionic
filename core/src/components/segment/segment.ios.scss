@import "./segment";
@import "./segment.ios.vars";

// iOS Segment
// --------------------------------------------------

:host {
  --background: #{$segment-ios-background-color};
  --indicator-color: #{$segment-button-ios-indicator-color};;
  --indicator-transition: #{$segment-button-ios-transition-animated};

  @include border-radius($segment-ios-border-radius);

  overflow: hidden;
}

:host(.segment-disabled) {
  opacity: $segment-button-ios-opacity-disabled;
}


// Segment: Color
// --------------------------------------------------

:host(.ion-color) {
  background: #{current-color(base, 0.065)};
}

:host(.ion-color)::slotted(.segment-button-checked) {
  color: #000;
}


// Segment: Default Toolbar
// --------------------------------------------------

:host-context(ion-toolbar) {
  @include margin(0, auto);

  width: auto;
}

// TODO reevaluate the global variables needed
:host-context(ion-toolbar:not(.ion-color)):host(:not(.ion-color)) {
  --background: #{var(--ion-toolbar-background-unchecked, $segment-ios-background-color)};
  --color: #{var(--ion-toolbar-color-unchecked, var(--color))};
}

:host-context(ion-toolbar:not(.ion-color)):host(:not(.ion-color)) .segment-checked-indicator-background {
  background: #{var(--ion-toolbar-background-checked, var(--indicator-color))};
}

:host-context(ion-toolbar:not(.ion-color)):host(:not(.ion-color)) ::slotted(ion-segment-button) {
  color: #{var(--ion-toolbar-color-unchecked, var(--color))};
}

:host-context(ion-toolbar:not(.ion-color)):host(:not(.ion-color)) ::slotted(.segment-button-checked) {
  color: #{var(--ion-toolbar-color-checked, var(--color-checked))};
}
// TODO the indicator color can't be globally themed

// Segment: Color Toolbar
// --------------------------------------------------

:host-context(ion-toolbar.ion-color):host(:not(.ion-color)) {
  background: #{current-color(contrast, 0.11)};
}

:host-context(ion-toolbar.ion-color):host(:not(.ion-color)) ::slotted(.segment-button-checked) {
  color: #{current-color(base)};
}


// Segment: Checked Indicator
// --------------------------------------------------

.segment-checked-indicator {
  @include padding($segment-button-ios-margin);
  @include position(0, 0, 0, 0);
}

.segment-checked-indicator-background {
  @include border-radius($segment-button-ios-border-radius);

  background: var(--indicator-color);

  box-shadow: $segment-button-ios-box-shadow-checked;
}


// Segment: Checked Borders
// --------------------------------------------------

::slotted(.segment-button-checked)::before,
::slotted(.segment-button-after-checked)::before {
  opacity: 0;
}
