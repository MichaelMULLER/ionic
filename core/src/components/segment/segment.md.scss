@import "./segment";
@import "./segment.md.vars";

// Material Design Segment
// --------------------------------------------------

:host {
  --background: transparent;
  --color: #{$segment-button-md-text-color};
  --color-checked: #{$segment-button-md-text-color-checked};
  --indicator-color: var(--color-checked);
  --indicator-transition: #{$segment-button-md-transition-animated};
}

:host(.segment-disabled) {
  opacity: $segment-md-opacity-disabled;
}

// Segment: Color
// --------------------------------------------------

:host(.ion-color) {
  --indicator-color: #{current-color(base)};
}

:host(.ion-color) ::slotted(ion-segment-button) {
  --background-activated: #{current-color(base, .16)};
  --ripple-color: #{current-color(base)};

  background: transparent;
  color: $segment-button-md-text-color;
}

:host(.ion-color) ::slotted(.segment-button-checked) {
  color: #{current-color(base)};
}

:host(.ion-color) ::slotted(.segment-button-checked.activated) {
  color: #{current-color(base)};
}

@media (any-hover: hover) {
  :host(.ion-color) ::slotted(ion-segment-button:hover) {
    background: #{current-color(base, .04)};
  }
}

// Segment: Default Toolbar
// --------------------------------------------------

:host-context(ion-toolbar:not(.ion-color)):host(:not(.ion-color)) {
  --indicator-color: #{var(--ion-toolbar-color-checked, var(--color-checked))};
}

:host-context(ion-toolbar:not(.ion-color)):host(:not(.ion-color)) ::slotted(ion-segment-button) {
  background: #{var(--ion-toolbar-background-unchecked, var(--background))};
  color: #{var(--ion-toolbar-color-unchecked, var(--color))};
}

:host-context(ion-toolbar:not(.ion-color)):host(:not(.ion-color)) ::slotted(.segment-button-checked) {
  background: #{var(--ion-toolbar-background-checked, var(--background-checked))};
  color: #{var(--ion-toolbar-color-checked, var(--color-checked))};
}


// Segment: Toolbar Color
// --------------------------------------------------

:host-context(ion-toolbar.ion-color):host(:not(.ion-color)) {
  --indicator-color: #{current-color(contrast)};
}

:host-context(ion-toolbar.ion-color):host(:not(.ion-color)) ::slotted(ion-segment-button) {
  --background-hover: #{current-color(contrast, .04)};
  --background-activated: #{current-color(base)};
  --color: #{current-color(contrast, .6)};
  --color-checked: #{current-color(contrast)};
}

// Segment: Checked Indicator
// --------------------------------------------------

.segment-checked-indicator {
  @include position(null, 0, 0, 0);
}

.segment-checked-indicator-background {
  height: 2px;

  background: var(--indicator-color);
}
